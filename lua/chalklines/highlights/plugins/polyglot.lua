local M = {}

---Get the highlight groups for the plugin
---@param theme table
---@return table
function M.groups(theme)
  local config = require('chalklines.config').config

  return {
    -- CSS
    cssAttrComma = { fg = theme.palette.purple },
    cssAttributeSelector = { fg = theme.palette.green },
    cssBraces = { fg = theme.palette.pink },
    cssClassName = { fg = theme.palette.orange },
    cssClassNameDot = { fg = theme.palette.orange },
    cssDefinition = {
      fg = theme.palette.purple,
      style = config.options.bold_italic,
    },
    cssFontAttr = { fg = theme.palette.orange },
    cssFontDescriptor = { link = 'cssDefinition' },
    cssFunctionName = { fg = theme.palette.blue },
    cssIdentifier = { fg = theme.palette.blue },
    cssImportant = { link = 'cssDefinition' },
    cssInclude = { fg = theme.palette.fg },
    cssIncludeKeyword = { link = 'cssDefinition' },
    cssMediaType = { fg = theme.palette.orange },
    cssProp = { fg = theme.palette.fg },
    cssPseudoClassId = { fg = theme.palette.orange },
    cssSelectorOp = { link = 'cssDefinition' },
    cssSelectorOp2 = { link = 'cssDefinition' },
    cssTagName = { fg = theme.palette.pink },

    -- HTML
    htmlArg = { fg = theme.palette.purple, style = config.options.bold_italic },
    htmlBold = { fg = theme.palette.orange, style = config.options.bold },
    htmlItalic = { fg = theme.palette.purple, style = config.options.italic },
    htmlLink = { fg = theme.palette.cyan, style = config.options.underline },
    htmlH1 = { fg = theme.palette.pink },
    htmlH2 = { link = 'htmlH1' },
    htmlH3 = { link = 'htmlH1' },
    htmlH4 = { link = 'htmlH1' },
    htmlH5 = { link = 'htmlH1' },
    htmlH6 = { link = 'htmlH1' },
    htmlSpecialChar = { link = 'SpecialChar' },
    htmlSpecialTagName = { fg = theme.palette.pink },
    htmlTag = { link = 'TSTag' },
    htmlEndTag = { link = 'htmlTag' },
    htmlTagN = { fg = theme.palette.pink },
    htmlTagName = { fg = theme.palette.pink },
    htmlTitle = { fg = theme.palette.fg },

    -- Javascript
    javascriptBraces = { fg = theme.palette.pink },
    javaScriptFunction = { fg = theme.palette.purple },
    javaScriptIdentifier = { fg = theme.palette.purple },
    javaScriptNull = { fg = theme.palette.orange },
    javaScriptNumber = { link = 'Number' },
    javaScriptRequire = { fg = theme.palette.cyan },
    javaScriptReserved = { fg = theme.palette.purple },
    ---- https://github.com/pangloss/vim-javascript included in Vim-Polygot
    jsArrowFunction = {
      fg = theme.palette.purple,
      style = config.options.bold_italic,
    },
    jsClassKeyword = { link = 'jsArrowFunction' },
    jsClassMethodType = { link = 'jsArrowFunction' },
    jsDocParam = { fg = theme.palette.blue },
    jsDocTags = { fg = theme.palette.purple },
    jsExport = { link = 'jsArrowFunction' },
    jsExportDefault = { link = 'jsExport' },
    jsExtendsKeyword = { link = 'jsClassKeyword' },
    jsFrom = { link = 'jsExport' },
    jsFuncCall = { fg = theme.palette.blue },
    jsFunction = { link = 'jsArrowFunction' },
    jsGenerator = { fg = theme.palette.yellow },
    jsGlobalObjects = { link = 'jsGenerator' },
    jsImport = { link = 'jsExport' },
    jsModuleAs = { link = 'jsExport' },
    jsModuleWords = { link = 'jsExport' },
    jsModules = { link = 'jsExport' },
    jsNull = { fg = theme.palette.orange },
    jsOperator = { fg = theme.palette.purple },
    jsStorageClass = { link = 'jsClassKeyword' },
    jsSuper = { fg = theme.palette.pink },
    jsTemplateBraces = { fg = theme.palette.pink },
    jsTemplateVar = { fg = theme.palette.green },
    jsThis = { fg = theme.palette.pink },
    jsUndefined = { fg = theme.palette.orange },

    -- JSON
    jsonCommentError = { fg = theme.palette.fg },
    jsonKeyword = { fg = theme.palette.pink },
    jsonBoolean = { link = 'Boolean' },
    jsonNumber = { link = 'Number' },
    jsonQuote = { fg = theme.palette.fg },
    jsonMissingCommaError = { fg = theme.palette.pink, style = 'reverse' },
    jsonNoQuotesError = { link = 'jsonMissingCommaError' },
    jsonNumError = { link = 'jsonMissingCommaError' },
    jsonString = { fg = theme.palette.green },
    jsonStringSQError = { link = 'jsonMissingCommaError' },
    jsonSemicolonError = { link = 'jsonMissingCommaError' },

    -- Markdown
    markdownBlockquote = { fg = theme.palette.gray },
    markdownBold = { fg = theme.palette.orange, style = config.options.bold },
    markdownCode = { fg = theme.palette.green },
    markdownCodeBlock = { link = 'markdownCode' },
    markdownCodeDelimiter = { link = 'markdownCode' },
    markdownH1 = { fg = theme.palette.pink },
    markdownH2 = { link = 'markdownH1' },
    markdownH3 = { link = 'markdownH1' },
    markdownH4 = { link = 'markdownH1' },
    markdownH5 = { link = 'markdownH1' },
    markdownH6 = { link = 'markdownH1' },
    markdownHeadingDelimiter = { fg = theme.palette.pink },
    markdownHeadingRule = { link = 'markdownBlockquote' },
    markdownId = {
      fg = theme.palette.purple,
      style = config.options.bold_italic,
    },
    markdownIdDeclaration = { fg = theme.palette.blue },
    markdownIdDelimiter = { link = 'markdownId' },
    markdownItalic = {
      fg = theme.palette.purple,
      style = config.options.italic,
    },
    markdownLinkDelimiter = { fg = theme.palette.purple },
    markdownLinkText = { fg = theme.palette.blue },
    markdownListMarker = { fg = theme.palette.pink },
    markdownOrderedListMarker = { link = 'markdownListMarker' },
    markdownRule = { link = 'markdownBlockquote' },
    markdownUrl = { fg = theme.palette.cyan, style = config.options.underline },

    -- Python
    pythonNone = { fg = theme.palette.yellow },
    pythonBoolean = { link = 'pythonNone' },
    pythonClass = { fg = theme.palette.yellow },
    pythonParens = { fg = theme.palette.pink },
    pythonBuiltinObj = { fg = theme.palette.cyan, style = config.options.bold },
    pythonSpaceError = { bg = theme.palette.red, fg = theme.palette.fg },
    pythonString = { fg = theme.palette.green },
    pythonDot = { fg = theme.palette.fg },
    pythonImport = {
      fg = theme.palette.purple,
      style = config.options.bold_italic,
    },
    pythonRepeat = { link = 'pythonImport' },
    pythonStatement = { link = 'pythonImport' },
    pythonOperator = { link = 'pythonImport' },

    -- Ruby
    rubyBlockParameter = { fg = theme.palette.pink },
    rubyBlockParameterList = { link = 'rubyBlockParameter' },
    rubyClass = {
      fg = theme.palette.purple,
      style = config.options.bold_italic,
    },
    rubyConstant = { fg = theme.palette.yellow },
    rubyControl = { link = 'rubyClass' },
    rubyEscape = { fg = theme.palette.pink },
    rubyFunction = { fg = theme.palette.blue },
    rubyGlobalVariable = { fg = theme.palette.pink },
    rubyInclude = { fg = theme.palette.blue },
    rubyIncluderubyGlobalVariable = { link = 'rubyGlobalVariable' },
    rubyInstanceVariable = { link = 'rubyGlobalVariable' },
    rubyInterpolation = { fg = theme.palette.cyan },
    rubyInterpolationDelimiter = { fg = theme.palette.pink },
    rubyRegexp = { fg = theme.palette.cyan },
    rubyRegexpDelimiter = { link = 'rubyRegexp' },
    rubyStringDelimiter = { fg = theme.palette.green },
    rubySymbol = { fg = theme.palette.cyan },

    -- SASS
    sassidChar = { fg = theme.palette.pink },
    sassClassChar = { fg = theme.palette.orange },
    sassInclude = {
      fg = theme.palette.purple,
      style = config.options.bold_italic,
    },
    sassMixing = { link = 'sassInclude' },
    sassMixinName = { fg = theme.palette.blue },
    scssExtend = { link = 'sassInclude' },
    scssImport = { link = 'sassInclude' },
    scssMixin = { link = 'sassMixing' },
    scssSelectorName = { fg = theme.palette.orange },
    scssVariable = { link = 'sassMixing' },
  }
end

return M
